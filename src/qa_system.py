# -*- coding: utf-8 -*-
"""Untitled142.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xGPzrJ9oW8NnW7oF7quJi7W-g698qd1D
"""

import openai
import json
import pandas as pd
from query_handler import load_embeddings, find_relevant_docs

# Load your OpenAI API key from an environment variable or configuration file
openai.api_key = 'YOUR_OPENAI_API_KEY'

def generate_answer(context, query):
    response = openai.Completion.create(
        engine="text-davinci-003",
        prompt=f"Context: {context}\n\nQuestion: {query}\nAnswer:",
        max_tokens=150
    )
    return response.choices[0].text.strip()

def main():
    query = "What are some milestone model architectures and papers in the last few years?"

    lecture_embeddings, papers_embeddings = load_embeddings(
        '../data/lecture_notes_embeddings.npy',
        '../data/milestone_papers_embeddings.npy'
    )

    # Find relevant documents
    lecture_indices = find_relevant_docs(query, lecture_embeddings)
    papers_indices = find_relevant_docs(query, papers_embeddings)

    with open('../data/processed_lecture_notes.json', 'r') as file:
        lecture_notes = json.load(file)

    milestone_papers = pd.read_csv('../data/processed_milestone_papers.csv')

    # Combine relevant contexts
    context = ""
    for index in lecture_indices:
        context += lecture_notes[index]['content'] + "\n"
    for index in papers_indices:
        context += milestone_papers.iloc[index]['summary'] + "\n"

    # Generate answer
    answer = generate_answer(context, query)
    print("Answer:", answer)

if __name__ == "__main__":
    main()