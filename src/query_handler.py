# -*- coding: utf-8 -*-
"""Untitled142.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xGPzrJ9oW8NnW7oF7quJi7W-g698qd1D
"""

# src/query_handler.py
import numpy as np
from sentence_transformers import SentenceTransformer

def load_embeddings(lecture_path, papers_path):
    lecture_embeddings = np.load(lecture_path)
    papers_embeddings = np.load(papers_path)
    return lecture_embeddings, papers_embeddings

def find_relevant_docs(query, embeddings, top_k=5):
    model = SentenceTransformer('all-MiniLM-L6-v2')
    query_embedding = model.encode([query])[0]

    # Calculate cosine similarities
    similarities = np.dot(embeddings, query_embedding)
    top_indices = similarities.argsort()[-top_k:][::-1]

    return top_indices

def main():
    query = "What are some milestone model architectures and papers in the last few years?"

    lecture_embeddings, papers_embeddings = load_embeddings(
        '../data/lecture_notes_embeddings.npy',
        '../data/milestone_papers_embeddings.npy'
    )

    # Find relevant documents
    lecture_indices = find_relevant_docs(query, lecture_embeddings)
    papers_indices = find_relevant_docs(query, papers_embeddings)

    print("Top lecture notes indices:", lecture_indices)
    print("Top milestone papers indices:", papers_indices)

if __name__ == "__main__":
    main()